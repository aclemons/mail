---

name: Build and deploy mail infrastructure

on:
  push:
    branches: master

env:
  AWS_DEFAULT_REGION: eu-central-1
  SESSION_DURATION: 900

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  docker:
    name: Apply tofu
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          show-progress: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

      - name: Compute git sha
        run: echo "DOCKER_IMAGE_VERSION=git$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/mail-automation
          role-duration-seconds: ${{ env.SESSION_DURATION }}

      - name: Download lambda layers
        run: |
          ./bin/download-lambda-layers.sh

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          mask-password: 'true'

      - name: Build and push imapfilter
        uses: docker/build-push-action@1ca370b3a9802c92e886402e0dd88098a2533b12 # v6.4.1
        with:
          push: true
          platforms: linux/amd64
          cache-from: type=gha,scope=imapfilter
          cache-to: type=gha,mode=max,scope=imapfilter
          context: .
          file: docker/imapfilter/Dockerfile
          provenance: false
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/mail/imapfilter:latest
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/mail/imapfilter:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Build and push processor
        uses: docker/build-push-action@1ca370b3a9802c92e886402e0dd88098a2533b12 # v6.4.1
        with:
          push: true
          platforms: linux/amd64
          cache-from: type=gha,scope=processor
          cache-to: type=gha,mode=max,scope=processor
          context: .
          file: docker/processor/Dockerfile
          provenance: false
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/mail/processor:latest
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/mail/processor:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Configure tofu plugin cache
        run: |
          printf 'plugin_cache_dir = "%s/.tofu.d/plugin-cache"\n' "$HOME" > ~/.tofurc
          mkdir -p ~/.tofu.d/plugin-cache

      - name: Cache Tofu plugins
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.tofu.d/plugin-cache
          key: ${{ runner.os }}-tofu-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Set tofu version
        run: echo "TOFU_VERSION=$(cat tf/.opentofu-version)" >> "$GITHUB_ENV"

      - uses: opentofu/setup-opentofu@ae80d4ecaab946d8f5ff18397fbf6d0686c6d46a # v1.0.3
        with:
          tofu_version: ${{ env.TOFU_VERSION }}
          tofu_wrapper: false

      - name: Configure AWS Credentials (for tofu)
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/mail-automation
          role-duration-seconds: ${{ env.SESSION_DURATION }}

      - name: Tofu init
        run: tofu init -lockfile=readonly
        working-directory: tf

      - name: Tofu apply
        run: tofu apply -auto-approve -input=false -var docker_image_version=${{ env.DOCKER_IMAGE_VERSION }}
        working-directory: tf
