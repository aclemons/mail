---

name: Build and deploy mail infrastructure

"on":
  push:
    branches: master

env:
  AWS_DEFAULT_REGION: eu-central-1
  SESSION_DURATION: 900

jobs:
  docker:
    name: Apply terraform
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

      - name: Compute git sha
        run:
          echo "DOCKER_IMAGE_VERSION=git$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@50ac8dd1e1b10d09dac7b8727528b91bed831ac0 # v3.0.2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/mail-automation
          role-duration-seconds: ${{ env.SESSION_DURATION }}

      - name: Download lambda layers
        run: |
          ./bin/download-lambda-layers.sh

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@2fc7aceee09e9e4a7105c0d060c656fad0b4f63d # v1.7.0
        with:
          mask-password: 'true'

      - name: Build and push
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
        with:
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: docker/imapfilter/Dockerfile
          provenance: false
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/mail/imapfilter:latest
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/mail/imapfilter:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Set terraform version
        run:
          echo "TERRAFORM_VERSION=$(cat tf/.terraform-version)" >> "$GITHUB_ENV"

      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform init
        run: terraform init -lockfile=readonly
        working-directory: tf

      - name: Terraform apply
        run: terraform apply -auto-approve -input=false -var docker_image_version=${{ env.DOCKER_IMAGE_VERSION }}
        working-directory: tf
